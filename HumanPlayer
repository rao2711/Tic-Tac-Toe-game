/**
 * 
 */
package game.tictactoe;

import java.util.InputMismatchException;
import java.util.Scanner;

/**
 * This class implements the Player Interface
 * and describes methods associated with the user who plays the game.
 * 
 * getNextmove method also deals with the possibility of incorrect user input
 * 
 * @author Harshita Rao
 *
 */
public class HumanPlayer implements Player {
	
	private char human_play;
	private String name;
	

	/**
	 * 
	 */
	@Override
	public String getName() {
		return name;
	}	
	
	void setName(String name)
	{
		this.name = name;
	}
	@Override
	public char getSymbol() {
        
		return human_play;
	}

	void setSymbol(char symbol) {
		human_play = symbol;
	}
	
	@Override
	public char[] getNextMove(Board b) {
		
        Scanner s = new Scanner(System.in);
		int move = -1;
		char[] Board = b.getmBoard();
		int board_size = b.getBoard_size();
        char comp_play = ' ';
        
		if(human_play == 'X') { 
		    comp_play = 'O';
		}
		else {
			comp_play = 'X';
		}
		
		while (move == -1) 
		{		
		  // these try catch blocks are to ensure valid input from the user	
		  try {
			System.out.print("Enter your move: ");
			move = s.nextInt();
			
			  while (move < 1 || move > board_size || 
			  Board[move-1] == human_play || Board[move-1] == comp_play) 
				  {
					if (move < 1 || move > board_size)
						System.out.println("Please enter a move between 1 and " + board_size + ".");
					else
						System.out.println("That space is occupied.  Please choose another space.");
		
					System.out.print("Enter your move: ");
				    move = s.nextInt();
				  }
			   } 
			catch (InputMismatchException ex) {
				System.out.println("Please enter a number between 1 and " + board_size + ".");
				s.next();  
				move = -1;
			   }
		}
        Board[move-1] = human_play;
		return Board;
	}
}
